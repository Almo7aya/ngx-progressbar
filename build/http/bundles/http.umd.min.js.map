{
  "version": 3,
  "file": "http.umd.min.js",
  "sources": [
    "~/@ngx-progressbar/http/src/ng-progress.xhr.ts",
    "~/@ngx-progressbar/http/src/ng-progress-http.module.ts",
    "~/@ngx-progressbar/http/src/http.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\nimport { BrowserXhr } from '@angular/http';\nimport { NgProgress } from '@ngx-progressbar/core';\n\n@Injectable()\nexport class NgProgressBrowserXhr extends BrowserXhr {\n\n  private currentRequest = 0;\n\n  constructor(private progress: NgProgress) {\n    super();\n  }\n\n  public build() {\n    const xhr = super.build();\n\n    xhr.onload = (evt) => this.done();\n    xhr.onerror = (evt) => this.done();\n    xhr.onabort = (evt) => this.done();\n\n    xhr.onloadstart = (event) => {\n      this.currentRequest++;\n      if (!this.progress.isStarted) {\n        this.progress.start();\n      }\n    };\n\n    return xhr;\n  }\n\n  private done() {\n    this.currentRequest--;\n    if (this.currentRequest === 0) {\n      this.progress.done();\n    }\n  }\n}\n",
    "import { NgModule } from '@angular/core';\nimport { BrowserXhr } from '@angular/http';\nimport { NgProgressBrowserXhr } from './ng-progress.xhr';\n\n@NgModule({\n  providers: [\n    { provide: BrowserXhr, useClass: NgProgressBrowserXhr }\n  ],\n})\nexport class NgProgressHttpModule {}\n",
    "/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {NgProgressBrowserXhr as Éµa} from './ng-progress.xhr';"
  ],
  "names": [
    "__decorate$1",
    "this",
    "__decorate",
    "decorators",
    "target",
    "key",
    "desc",
    "d",
    "c",
    "arguments",
    "length",
    "r",
    "Object",
    "getOwnPropertyDescriptor",
    "Reflect",
    "decorate",
    "i",
    "defineProperty",
    "__metadata",
    "k",
    "v",
    "metadata",
    "NgProgressBrowserXhr",
    "_super",
    "progress",
    "_this",
    "call",
    "currentRequest",
    "__extends",
    "prototype",
    "build",
    "xhr",
    "onload",
    "evt",
    "done",
    "onerror",
    "onabort",
    "onloadstart",
    "event",
    "BrowserXhr",
    "Injectable"
  ],
  "mappings": "iwBAKaA,EALbC,MAAAA,KAKAC,YALA,SAAAC,EAAAC,EAAAC,EAAAC,GASE,IAAFC,EAAAC,EAAAC,UAAAC,OAAAC,EAAAH,EAAA,EAAAJ,EAAA,OAAAE,EAAAA,EAAAM,OAAAC,yBAAAT,EAAAC,GAAAC,EACA,GAAA,iBAAWQ,SAAX,mBAAAA,QAAAC,SADsBJ,EAAtBG,QAAAC,SAAAZ,EAAAC,EAAAC,EAAAC,QAEA,IAAA,IAAAU,EAAAb,EAAAO,OAAA,EAAAM,GAAA,EAAAA,KAEAT,EAAAJ,EAAAa,MACAL,GAAAH,EAAqB,EAArBD,EAA2BI,GAA3BH,EAAA,EAAAD,EAAAH,EAAAC,EAAAM,GAAAJ,EAAAH,EAAAC,KAAAM,GAEA,OAAOH,EAAP,GAAAG,GAAqBC,OAArBK,eAAAb,EAAAC,EAAAM,GAAAA,GAEAO,EAAAjB,MAAsBA,KAAKiB,YAA3B,SAAAC,EAAAC,GAEA,GAAuB,iBAAvBN,SAAA,mBAAAA,QAAAO,SACA,OAAAP,QAAAO,SAAAF,EAAAC,IAEAE,EAAAA,GAAA,SAA8BC,GAE9B,SAAAD,EAAAE,GAEI,IAAJC,EAAAF,EAAAG,KAAAzB,OAAAA,KAII,OAHJwB,EAAAD,SAAAA,EAEcC,EAAdE,eAAA,EACAF,ECzBA,ODkBAG,EAAAN,EAAAC,GASAD,EAAmBO,UAAnBC,MAAA,WACA,IAAAL,EAAAxB,KACA8B,EAAAR,EAAAM,UAAAC,MAAAJ,KAAAzB,aACA8B,EAAAC,OAAA,SAAAC,GAAA,OAAAR,EAAAS,QA/BAH,EAAAI,QAAA,SAAAF,GAAA,OAAAR,EAAAS,QADAH,EAAAK,QAAA,SAAAH,GAAA,OAAAR,EAAAS,QAKAH,EAAAM,YAAA,SAAAC,GAJAb,EAAAE,0FCLA1B,KAAA0B,iBASA,IAAA1B,KAAA0B,gBAAA1B,KAAAuB,SAAAU,QAHAZ,EDiBA,CChBAiB,EAAAA,YACAjB,EAAAA,GAAAtB,GACAwC,EAAAA,oDCTAlB,EAAAA,mDAEA,IAAAf,EAAAC,EAAAC,UAAAC,OAAAC,EAAAH,EAAA,EAAAJ,EAAA,OAAAE,EAAAA,EAAAM,OAAAC,yBAAAT,EAAAC,GAAAC"
}
