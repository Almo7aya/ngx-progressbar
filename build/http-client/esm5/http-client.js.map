{
  "version": 3,
  "file": "http-client.js",
  "sources": [
    "~/@ngx-progressbar/http-client/src/http-client.ts",
    "~/@ngx-progressbar/http-client/src/ng-progress-http-client.module.ts",
    "~/@ngx-progressbar/http-client/src/ng-progress.interceptor.ts"
  ],
  "sourcesContent": [
    "/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {NgProgressInterceptor as Éµa} from './ng-progress.interceptor';",
    "import { NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgProgressInterceptor } from './ng-progress.interceptor';\n\n@NgModule({\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: NgProgressInterceptor, multi: true }\n  ],\n})\nexport class NgProgressHttpClientModule {}\n",
    "import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { finalize } from 'rxjs/operators';\nimport { NgProgress } from '@ngx-progressbar/core';\n\n@Injectable()\nexport class NgProgressInterceptor implements HttpInterceptor {\n\n  constructor(public progress: NgProgress) {\n  }\n\n  // Ignoring specific requests will be supported after this https://github.com/angular/angular/issues/18155\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    this.progress.start();\n    return next.handle(req).pipe(finalize(() => this.progress.done()));\n  }\n}\n"
  ],
  "names": [
    "__decorate"
  ],
  "mappings": ";;;;;;;;;;;;;;AEAA,AAOA,IAAa,qBAAqB,GAAlC,MAAA,qBAAA,CAAA;IAEE,WAAF,CAAqB,QAAoB,EAAzC;QAAqB,IAArB,CAAA,QAA6B,GAAR,QAAQ,CAAY;KACtC;;IAGD,SAAS,CAAC,GAAqB,EAAE,IAAiB,EAApD;QACI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACtB,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;KACpE;CACF,CAAA;AAVY,qBAAqB,GAAlCA,YAAA,CAAA;IADC,UAAU,EAAE;IAGb,UAAA,CAAA,mBAAA,EAAA,CAA+B,UAAU,CAAzC,CAAA;CAFA,EAAa,qBAAqB,CAUjC,CAVD;;;;;;;;ADPA,AASA,IAAa,0BAA0B,GAAvC,MAAA,0BAAA,CAAA;CAA0C,CAAA;AAA7B,0BAA0B,GAAvC,UAAA,CAAA;IALC,QAAQ,CAAC;QACR,SAAS,EAAE;YACT,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,qBAAqB,EAAE,KAAK,EAAE,IAAI,EAAE;SAC7E;KACF,CAAC;CACF,EAAa,0BAA0B,CAAG,CAA1C;;ADTA;;GAEG;;;;"
}
