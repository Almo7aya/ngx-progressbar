{"version":3,"file":"progress.component.js","sourceRoot":"","sources":["../../inlined/components/progress/progress.component.ts"],"names":[],"mappings":"OAAO,EACL,SAAS,EAAE,KAAK,EAAE,uBAAuB,EAAE,iBAAiB,EAC7D,MAAM,eAAe;OACf,EAAC,iBAAiB,EAAC,MAAM,gCAAgC;AAIhE;IAeE,2BAAoB,QAA2B;QAA3B,aAAQ,GAAR,QAAQ,CAAmB;QAb/C,wBAAwB;QACvB,SAAI,GAAG,QAAQ,CAAC;QAChB,kBAAa,GAAG,EAAE,CAAC;QACnB,gBAAW,GAAG,IAAI,CAAC;QACnB,cAAS,GAAG,sBAAsB,CAAC;IAWpC,CAAC;IAED,uCAAW,GAAX,UAAY,OAAsB;QAEhC,IAAI,aAAa,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;QACvC,IAAI,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,kBAAkB,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;QACjD,IAAI,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;QAErC,EAAE,CAAC,CAAC,aAAa,IAAI,aAAa,CAAC,YAAY,KAAK,aAAa,CAAC,aAAa,CAAC;YAC9E,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,aAAa,CAAC,YAAY,CAAC;QAErD,EAAE,CAAC,CAAC,WAAW,IAAI,WAAW,CAAC,YAAY,KAAK,WAAW,CAAC,aAAa,CAAC;YACxE,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,WAAW,CAAC,YAAY,CAAC;QAEjD,EAAE,CAAC,CAAC,kBAAkB,IAAI,kBAAkB,CAAC,YAAY,KAAK,kBAAkB,CAAC,aAAa,CAAC;YAC7F,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,kBAAkB,CAAC,YAAY,CAAC;QAE/D,EAAE,CAAC,CAAC,YAAY,CAAC;YACf,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IAC7E,CAAC;;IACI,4BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,aAAa;oBACvB,QAAQ,EAAE,iTAAiT;oBAC3T,MAAM,EAAE,CAAC,4/DAA4/D,CAAC;oBACtgE,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,gCAAc,GAA6D;QAClF,EAAC,IAAI,EAAE,iBAAiB,GAAG;KAC1B,CAAC;IACK,gCAAc,GAA2C;QAChE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC1B,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACnC,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACjC,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC/B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC3B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC3B,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC7B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC3B,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAClC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KAC3B,CAAC;IACF,wBAAC;AAAD,CAAC,AA/DD,IA+DC","sourcesContent":["import {\n  Component, Input, ChangeDetectionStrategy, ViewEncapsulation, OnChanges, SimpleChanges\n} from '@angular/core';\nimport {NgProgressService} from \"../../service/progress.service\";\n\n\n\nexport class ProgressComponent implements OnChanges {\n\n  /** Progress options  */\n   ease = 'linear';\n   positionUsing = '';\n   showSpinner = true;\n   direction = \"leftToRightIncreased\";\n   color;\n   thick;\n   minimum;\n   speed;\n   trickleSpeed;\n  /** Start/Stop Progressbar */\n   toggle;\n\n  constructor(private progress: NgProgressService) {\n\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    let minimumChange = changes['minimum'];\n    let speedChange = changes['speed'];\n    let trickleSpeedChange = changes['trickleSpeed'];\n    let toggleChange = changes['toggle'];\n\n    if (minimumChange && minimumChange.currentValue !== minimumChange.previousValue)\n      this.progress.minimum = minimumChange.currentValue;\n\n    if (speedChange && speedChange.currentValue !== speedChange.previousValue)\n      this.progress.speed = speedChange.currentValue;\n\n    if (trickleSpeedChange && trickleSpeedChange.currentValue !== trickleSpeedChange.previousValue)\n      this.progress.trickleSpeed = trickleSpeedChange.currentValue;\n\n    if (toggleChange)\n      toggleChange.currentValue ? this.progress.start() : this.progress.done();\n  };\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ng-progress',\n  template: \"\\n    <ng-progress-bar\\n      [speed]=\\\"speed\\\"\\n      [positionUsing]=\\\"positionUsing\\\"\\n      [ease]=\\\"ease\\\"\\n      [showSpinner]=\\\"showSpinner\\\"\\n      [direction]=\\\"direction\\\"\\n      [color]=\\\"color\\\"\\n      [thick]=\\\"thick\\\"\\n      [state]=\\\"progress.state$ | async\\\"\\n    ></ng-progress-bar>\\n  \",\n  styles: [\"\\n    :host {\\n      pointer-events: none;\\n      position: relative;\\n      z-index: 65535;\\n    }\\n\\n    .ng-progress {\\n      z-index: 1031;\\n      top: 0;\\n      left: 0;\\n      width: 100%;\\n      position: fixed;\\n      zoom: 1;\\n      filter: alpha(opacity=0);\\n      opacity: 0;\\n      transition: opacity 200ms linear;\\n    }\\n\\n    .active {\\n      filter: alpha(opacity=100);\\n      opacity: 1;\\n      transition: none;\\n    }\\n\\n    .bar {\\n      height: 2px;\\n    }\\n\\n    .thick .bar {\\n      height: 3px;\\n    }\\n\\n    .bar-shadow {\\n      display: block;\\n      position: absolute;\\n      right: 0;\\n      top: -3px;\\n      width: 100px;\\n      height: 100%;\\n      opacity: 1.0;\\n      -webkit-transform: rotate(3deg);\\n      -ms-transform: rotate(3deg);\\n      transform: rotate(3deg);\\n    }\\n\\n\\n    .thick .bar-shadow {\\n      top: -4px;\\n      -webkit-transform: rotate(4deg);\\n      -ms-transform: rotate(4deg);\\n      transform: rotate(4deg);\\n    }\\n\\n    .thick .spinner-icon {\\n      width: 24px;\\n      height: 24px;\\n      border: solid 3px transparent;\\n    }\\n\\n    /* Remove these to get rid of the spinner */\\n    .spinner {\\n      display: block;\\n      position: fixed;\\n      z-index: 1031;\\n      top: 15px;\\n      right: 15px;\\n    }\\n\\n    .spinner-icon {\\n      width: 18px;\\n      height: 18px;\\n      box-sizing: border-box;\\n\\n      border: solid 2px transparent;\\n      border-radius: 50%;\\n\\n      -webkit-animation: nprogress-spinner 400ms linear infinite;\\n      animation: nprogress-spinner 400ms linear infinite;\\n    }\\n\\n    .anti-clockwise .spinner-icon {\\n      -webkit-animation-direction: reverse;\\n      animation-direction: reverse;\\n    }\\n\\n    @-webkit-keyframes nprogress-spinner {\\n      0% {\\n        -webkit-transform: rotate(0deg);\\n      }\\n      100% {\\n        -webkit-transform: rotate(360deg);\\n      }\\n    }\\n\\n    @keyframes nprogress-spinner {\\n      0% {\\n        transform: rotate(0deg);\\n      }\\n      100% {\\n        transform: rotate(360deg);\\n      }\\n    }\\n  \"],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: NgProgressService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ease': [{ type: Input },],\n'positionUsing': [{ type: Input },],\n'showSpinner': [{ type: Input },],\n'direction': [{ type: Input },],\n'color': [{ type: Input },],\n'thick': [{ type: Input },],\n'minimum': [{ type: Input },],\n'speed': [{ type: Input },],\n'trickleSpeed': [{ type: Input },],\n'toggle': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}